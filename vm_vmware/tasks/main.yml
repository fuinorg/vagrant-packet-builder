#########################################################################
# Run packer to create VMware Workstation VM with Vagrant               #
######################################################################### 
# Copyright (C) 2018 Michael Schnell. All rights reserved.              #
# http://www.fuin.org/                                                  #
#                                                                       #
# This program is free software: you can redistribute it and/or modify  #
# it under the terms of the GNU General Public License as published by  #
# the Free Software Foundation, either version 3 of the License, or     #
# (at your option) any later version.                                   #
#                                                                       #
# This program is distributed in the hope that it will be useful,       #
# but WITHOUT ANY WARRANTY; without even the implied warranty of        #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
# GNU General Public License for more details.                          #
#                                                                       #
# You should have received a copy of the GNU General Public License     #
# along with this program.  If not, see <http://www.gnu.org/licenses/>. #
#########################################################################
---

# Ensure all necessary values are set
- name: "Check required variables"
  fail: msg="Variable '{{ item }}' is not defined"
  when: item not in vars
  with_items: "{{ required_vars }}"

# Install vagrant-vmware-workstation plugin
- name: Install vagrant-vmware-workstation plugin
  shell: "vagrant plugin install vagrant-vmware-workstation"
   
# Download plugin license
- name: Download vagrant-vmware-workstation license
  get_url:
    url: "{{ vagrant_vmware_lic_url }}"
    dest: "{{ vagrant_vmware_lic_file }}"

# Install vagrant-vmware-desktop plugin
- name: Install vagrant-vmware-workstation license
  shell: "vagrant plugin license vagrant-vmware-workstation {{ vagrant_vmware_lic_file }}" 

# Clone Packer project
- name: Git clone Vagrant project for VMware
  git:
    repo: "{{ git_project_url }}"
    key_file: "{{ git_project_key }}"
    dest: "/srv/{{ packet_project_name }}/vm_vmware"

# Build virtual machine 
- name: Run Vagrant VMware VM build
  shell: |
    vagrant up --provider vmware_workstation 2>&1 | tee ./vagrant.log
    vagrant halt
  args:
    chdir: "/srv/{{ packet_project_name }}/vm_vmware"

# Get VM directory 
- name: Determine VM directory
  shell: "find /srv/{{ packet_project_name }}/vm_vmware/.vagrant/machines/default/vmware_workstation/ -maxdepth 1 -type d -print | head -2 | tail -1"
  register: vm_dir
  
- debug:
    msg: "VM directory = '{{ vm_dir.stdout }}'"

# Move VM directory
- name: Move VM directory
  command: "mv {{ vm_dir.stdout }} {{ vm_output_path }}/{{ vm_name_vmw }}"

# Cleanup VM before zipping it

- name: Find temporary files
  find:
    paths: "{{ vm_output_path }}/{{ vm_name_vmw }}"
    patterns: "*.nvram,*.log,*.vmxf,*.vmsd,metadata.json,Vagrantfile"
  register: vmw_tmp_files_result

- name: Remove temporary files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ vmw_tmp_files_result.files }}"
  register: result_remove_tmp

- name: Patch VMX file 
  script: "{{ role_path }}/files/replace-vmx.sh {{ vm_output_path }}/{{ vm_name_vmw }}"

# Create VM archive
- name: Create VM archive  
  archive:
    path: "{{ vm_output_path }}/{{ vm_name_vmw }}"
    dest: "{{ vm_output_path }}/{{ zip_name }}"
    format: zip
  tags:
    - vm_zip

# Get VM archive checksum
- name: Get VM archive checksum
  stat:
    path: "{{ vm_output_path }}/{{ zip_name }}"
  register: st
  tags:
    - vm_upload

# Upload ZIP to HTTP server
- name: Upload ZIP to server 
  shell: 'curl {{vm_upload_options}} -u"{{ vm_upload_user }}:{{ vm_upload_pw }}" -H "X-Checksum-Sha1:{{st.stat.checksum}}" -T "{{ vm_output_path }}/{{ zip_name }}" "{{ vm_upload_url  }}/{{ zip_name }}"'
  args:
    warn: false
  tags:
    - vm_upload

